{"version":3,"sources":["components/header/header.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/add-item/add-item.js","components/item-status-filter/item-status-filter.js","components/app/app.js","index.js"],"names":["Header","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","placeholder","this","onChange","Component","TodoListItem","label","important","onDeleted","onToggleImportant","onToggleDone","classNames","onClick","type","TodoList","todos","elements","map","item","id","itemProps","key","AddItem","onLabelChange","onSubmit","preventDefault","onItemAdded","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f8c5180d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\n\r\nconst Header = ({toDo, done}) => {\r\n  return (\r\n    <div className=\"header d-flex\">\r\n      <h1 className=\"header__caption\">Todo List</h1>\r\n      <div className=\"header__description\">{toDo} more to do, {done} done</div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\nclass SearchPanel extends Component {\r\n  state = {\r\n    term: ''\r\n  };\r\n\r\n  onSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    this.setState({term});\r\n    this.props.onSearchChange(term);\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <input\r\n        className=\"form-control search-input\"\r\n        placeholder=\"type to search\"\r\n        value={this.state.term}\r\n        onChange={this.onSearchChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPanel;\r\n","import React, { Component } from 'react';\r\nimport './todo-list-item.css';\r\n\r\nclass TodoListItem extends Component {\r\n\r\n  render() {\r\n    const { label, done, important, onDeleted, onToggleImportant, onToggleDone, } = this.props;\r\n\r\n    let classNames = 'list-group-item todo-list-item';\r\n    if (done) {\r\n      classNames += ' done';\r\n    }\r\n    if (important) {\r\n      classNames += ' important';\r\n    }\r\n\r\n    return (\r\n      <li className={classNames}>\r\n        <div className=\"todo-list-item__label\"\r\n             onClick={onToggleDone}>\r\n          {label}\r\n        </div>\r\n\r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm\"\r\n                onClick={onDeleted}>\r\n          <i className=\"fa fa-trash-o\"></i>\r\n        </button>\r\n\r\n        <button type=\"button\"\r\n                className=\"btn btn-outline-success btn-sm\"\r\n                onClick={onToggleImportant}>\r\n          <i className=\"fa fa-exclamation\"></i>\r\n        </button>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\nimport TodoListItem from \"../todo-list-item/todo-list-item\";\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    const {id, ...itemProps } = item;\r\n    return (\r\n      <TodoListItem { ...itemProps }\r\n                    key={id}\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleDone={() => onToggleDone(id)}/>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      { elements }\r\n    </ul>\r\n  )\r\n};\r\n\r\nexport default TodoList;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './add-item.css';\r\n\r\nclass AddItem extends Component {\r\n  state = {\r\n    label: ''\r\n  };\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onItemAdded(this.state.label);\r\n    this.setState({\r\n      label: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"add-item d-flex\"\r\n            onSubmit={this.onSubmit}>\r\n        <input type=\"text\"\r\n               className=\"form-control\"\r\n               placeholder=\"What needs to be done\"\r\n               onChange={this.onLabelChange}/>\r\n        <button className=\"btn btn-outline-secondary\"\r\n                value={this.state.label}>\r\n          AddItem\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddItem;\r\n","import React, {Component} from 'react';\r\n\r\nclass ItemStatusFilter extends Component {\r\n\r\n  buttons = [\r\n    {name: 'all', label: 'All'},\r\n    {name: 'active', label: 'Active'},\r\n    {name: 'done', label: 'Done'}\r\n  ];\r\n\r\n  render() {\r\n\r\n    const {filter, onFilterChange } = this.props;\r\n\r\n    const buttons = this.buttons.map(({name, label}) => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? 'btn-info':'btn-outline-secondary';\r\n      return(\r\n        <button\r\n          type=\"button\"\r\n          className={`btn ${clazz}`}\r\n          key={name}\r\n          onClick={()=>onFilterChange(name)}\r\n        >\r\n          {label}\r\n        </button>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {buttons}\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default ItemStatusFilter;\r\n","import React, {Component} from 'react';\r\nimport './app.css';\r\n\r\nimport Header from \"../header/header\";\r\nimport SearchPanel from \"../search-panel/search-panel\";\r\nimport TodoList from \"../todo-list/todo-list\";\r\nimport AddItem from \"../add-item/add-item\";\r\nimport ItemStatusFilter from \"../item-status-filter/item-status-filter\";\r\n\r\nclass App extends Component {\r\n\r\n  maxId = 0;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffee'),\r\n      this.createTodoItem('Make Awesome App'),\r\n      this.createTodoItem('Have a lunch')\r\n    ],\r\n    term: '',\r\n    filter: 'all'\r\n  }\r\n\r\n  createTodoItem (label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    };\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({todoData})=> {\r\n      const idx = todoData.findIndex((el) => el.id === id);\r\n      const newArray = [\r\n        ...todoData.slice(0, idx),\r\n        ...todoData.slice(idx + 1)\r\n      ];\r\n\r\n      return {\r\n        todoData: newArray\r\n      };\r\n    })\r\n  };\r\n\r\n  addItem = (label) => {\r\n    const newItem = this.createTodoItem(label);\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newArr = [\r\n        ...todoData,\r\n        newItem\r\n      ];\r\n\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n    const newItem = {...oldItem,\r\n      [propName]: !oldItem[propName]};\r\n\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      };\r\n    });\r\n  };\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({term});\r\n  };\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({filter});\r\n  };\r\n\r\n  search(items, term) {\r\n    if(term.length === 0) {\r\n      return items\r\n    }\r\n    return items.filter((item) => {\r\n      return item.label\r\n        .toLowerCase()\r\n        .indexOf(term.toLowerCase()) > -1;\r\n    })\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch(filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item)=>!item.done);\r\n      case 'done':\r\n        return items.filter((item)=> item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { todoData, term, filter } = this.state;\r\n\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n    const doneCount = todoData.filter((el) => el.done).length;\r\n\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <Header toDo={todoCount} done={doneCount}/>\r\n        <div className=\"top-panel search-panel d-flex\">\r\n          <SearchPanel onSearchChange={this.onSearchChange}/>\r\n          <ItemStatusFilter\r\n            filter={filter}\r\n            onFilterChange={this.onFilterChange}\r\n          />\r\n        </div>\r\n        <TodoList todos={visibleItems}\r\n                  onDeleted={this.deleteItem}\r\n                  onToggleImportant={this.onToggleImportant}\r\n                  onToggleDone={this.onToggleDone}/>\r\n        <AddItem onItemAdded={this.addItem}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./components/app/app\";\r\n\r\n\r\nReactDOM.render(<App/>, document.querySelector('#root'));\r\n\r\n"],"sourceRoot":""}